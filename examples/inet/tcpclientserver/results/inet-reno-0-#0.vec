version 3
run inet-reno-0-20230208-13:17:11-14269
attr configname inet-reno
attr datetime 20230208-13:17:11
attr datetimef 20230208-131711
attr experiment inet-reno
attr inifile omnetpp.ini
attr iterationvars $0=0
attr iterationvarsd 0
attr iterationvarsf 0-
attr measurement $0=0
attr network ClientServer
attr processid 14269
attr repetition 0
attr replication #0
attr resultdir results
attr runnumber 0
attr seedset 0
config image-path ../../../images
config description "TCP <---> TCP with reno algorithm"
config *.server*.tcp.typename Tcp
config *.client*.tcp.typename Tcp
config **.tcp.tcpAlgorithmClass "\"TcpReno\""
config *.per "0.01 * 0"
config *.server*.app[0].echoFactor 0
config network ClientServer
config total-stack 7MiB
config **.server.hasPcapRecorder true
config **.server.pcapRecorder.pcapFile "\"results/server.pcap\""
config **.client1.hasPcapRecorder true
config **.client1.pcapRecorder.pcapFile "\"results/client1.pcap\""
config **.crcMode "\"computed\""
config **.pcapRecorder.pcapLinkType 204
config **.numApps 1
config **.client*.app[*].typename TcpSessionApp
config **.client*.app[0].active true
config **.client*.app[0].localPort -1
config **.client*.app[0].connectAddress "\"server\""
config **.client*.app[0].connectPort 1000
config **.client*.app[0].tOpen 0.2s
config **.client*.app[0].tSend 0.4s
config **.client*.app[0].sendBytes 1000000B
config **.client*.app[0].sendScript "\"\""
config **.client*.app[0].tClose 25s
config **.server*.app[*].typename TcpEchoApp
config **.server*.app[0].localPort 1000
config **.server*.app[0].echoFactor 2.0
config **.server*.app[0].echoDelay 0s
config **.ppp[*].queue.typename DropTailQueue
config **.ppp[*].queue.packetCapacity 10
config *.configurator.config "xml(\"<config><interface hosts='*' address='192.168.1.x' netmask='255.255.255.0'/></config>\")"

vector 0 ClientServer.client1.ppp[0].ppp transmissionState:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
attr source transmissionStateChanged
attr title "tx state"
vector 1 ClientServer.client1.udp passedUpPk:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetSentToUpper
attr title "packets passed up, count"
vector 2 ClientServer.client1.udp droppedPkWrongPort:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
vector 3 ClientServer.client1.udp droppedPkBadChecksum:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
vector 4 ClientServer.server.ppp[0].ppp transmissionState:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
attr source transmissionStateChanged
attr title "tx state"
vector 5 ClientServer.server.udp passedUpPk:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetSentToUpper
attr title "packets passed up, count"
vector 6 ClientServer.server.udp droppedPkWrongPort:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
vector 7 ClientServer.server.udp droppedPkBadChecksum:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
vector 8 ClientServer.client1.tcp.conn-4 tcpRcvQueueBytes:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 9 ClientServer.client1.tcp.conn-4 rcvAdv:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 10 ClientServer.client1.tcp.conn-4 rcvWnd:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 11 ClientServer.client1.tcp.conn-4 sndAck:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 12 ClientServer.client1.ppp[0].queue incomingPacketLengths:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
vector 13 ClientServer.client1.ppp[0].queue incomingDataRate:vector ETV
attr interpolationmode linear
attr recordingmode vector
attr source throughput(packetPushStarted)
attr title "incoming datarate"
attr unit bps
vector 14 ClientServer.client1.ppp[0].queue queueingTime:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
vector 15 ClientServer.client1.ppp[0].queue outgoingPacketLengths:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
vector 16 ClientServer.client1.ppp[0].queue outgoingDataRate:vector ETV
attr interpolationmode linear
attr recordingmode vector
attr source throughput(packetPulled)
attr title "outgoing datarate"
attr unit bps
vector 17 ClientServer.client1.ppp[0].ppp txPk:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, packetBytes"
vector 18 ClientServer.client1.ppp[0].queue queueLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length"
attr unit pk
vector 19 ClientServer.client1.ppp[0].queue queueBitLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length"
attr unit b
vector 20 ClientServer.server.ppp[0].ppp rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source rxPkOk
attr title "packets received OK, packetBytes"
vector 21 ClientServer.server.ppp[0].ppp passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, packetBytes"
vector 22 ClientServer.server.tcp.conn-1 rcvSeq:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 23 ClientServer.server.tcp.conn-1 rcvAck:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 24 ClientServer.server.tcp.conn-1 tcpRcvPayloadBytes:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 25 ClientServer.server.tcp.conn-5 rcvAdv:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 26 ClientServer.server.tcp.conn-5 sndWnd:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 27 ClientServer.server.tcp.conn-5 tcpRcvQueueBytes:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 28 ClientServer.server.tcp.conn-5 rcvWnd:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 29 ClientServer.server.tcp.conn-5 sndAck:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 30 ClientServer.server.ppp[0].queue incomingPacketLengths:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source packetLength(packetPushStarted)
attr title "incoming packet lengths"
attr unit b
vector 31 ClientServer.server.ppp[0].queue incomingDataRate:vector ETV
attr interpolationmode linear
attr recordingmode vector
attr source throughput(packetPushStarted)
attr title "incoming datarate"
attr unit bps
vector 32 ClientServer.server.ppp[0].queue queueingTime:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source queueingTime(packetPulled)
attr title "queueing times"
attr unit s
vector 33 ClientServer.server.ppp[0].queue outgoingPacketLengths:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source packetLength(packetPulled)
attr title "outgoing packet lengths"
attr unit b
vector 34 ClientServer.server.ppp[0].queue outgoingDataRate:vector ETV
attr interpolationmode linear
attr recordingmode vector
attr source throughput(packetPulled)
attr title "outgoing datarate"
attr unit bps
vector 35 ClientServer.server.ppp[0].ppp txPk:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSentToLower
attr title "packets transmitted, packetBytes"
vector 36 ClientServer.server.ppp[0].queue queueLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(atomic(constant0(packetPushEnded) + count(packetPushStarted) - count(packetPulled) - count(packetRemoved) - count(packetDropped)))"
attr title "queue length"
attr unit pk
vector 37 ClientServer.server.ppp[0].queue queueBitLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(atomic(constant0(packetPushEnded) + sum(packetLength(packetPushStarted)) - sum(packetLength(packetPulled)) - sum(packetLength(packetRemoved)) - sum(packetLength(packetDropped))))"
attr title "queue bit length"
attr unit b
vector 38 ClientServer.client1.ppp[0].ppp rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source rxPkOk
attr title "packets received OK, packetBytes"
vector 39 ClientServer.client1.ppp[0].ppp passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSentToUpper
attr title "packets passed to higher layer, packetBytes"
vector 40 ClientServer.client1.tcp.conn-4 rcvSeq:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 41 ClientServer.client1.tcp.conn-4 rcvAck:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 42 ClientServer.client1.tcp.conn-4 tcpRcvPayloadBytes:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 43 ClientServer.client1.tcp.conn-4 sndWnd:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 44 ClientServer.server.tcp.conn-5 rcvSeq:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 45 ClientServer.server.tcp.conn-5 rcvAck:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 46 ClientServer.server.tcp.conn-5 tcpRcvPayloadBytes:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 47 ClientServer.server.tcp.conn-5 unacked:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 48 ClientServer.client1.app[0] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetSent
attr title "packets sent, packetBytes"
vector 49 ClientServer.client1.tcp.conn-4 sndNxt:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 50 ClientServer.client1.tcp.conn-4 unacked:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 51 ClientServer.server.tcp.conn-5 dupAcks:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 52 ClientServer.server.app[0] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr recordingmode vector(packetBytes)
attr source packetReceived
attr title "packets received, packetBytes"
vector 53 ClientServer.server.app[0] endToEndDelay:vector ETV
attr interpolationmode none
attr recordingmode vector
attr source dataAge(packetReceived)
attr title "end-to-end delay"
attr unit s
vector 54 ClientServer.client1.tcp.conn-4 rtt:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 55 ClientServer.client1.tcp.conn-4 srtt:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
vector 56 ClientServer.client1.tcp.conn-4 rttvar:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
v